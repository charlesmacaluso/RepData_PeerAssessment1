file_path_components <- c(directory, k, ".csv")
this_file_path <- paste(file_path_components, collapse = "")
this_data_set <- read.csv(this_file_path, header=TRUE)
clean_data_set <- this_data_set[complete.cases(this_data_set),]
interim_data <- rbind(interim_data, clean_data_set)
}
subtotaled_data <- table(interim_data[, "ID"])
final_data <- data.frame(id=integer(),
nobs=integer())
final_data <- rbind(final_data, subtotaled_data)
final_data
}
complete(this_directory, id=1)
complete <- function(directory, id = 1:332) {
interim_data <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
ID=integer())
for(i in id) {
if(i < 10) {
j <- c("00", as.character(i))
k <- paste(j, collapse = "")
} else if(i < 100) {
j <- c("0", as.character(i))
k <- paste(j, collapse = "")
} else {
k <- as.character(i)
}
file_path_components <- c(directory, k, ".csv")
this_file_path <- paste(file_path_components, collapse = "")
this_data_set <- read.csv(this_file_path, header=TRUE)
clean_data_set <- this_data_set[complete.cases(this_data_set),]
interim_data <- rbind(interim_data, clean_data_set)
}
subtotaled_data <- table(interim_data[, "ID"])
names(subtotaled_data) <- c("id", "nobs")
subtotaled_data
}
complete(this_directory, id=1)
complete <- function(directory, id = 1:332) {
interim_data <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
ID=integer())
for(i in id) {
if(i < 10) {
j <- c("00", as.character(i))
k <- paste(j, collapse = "")
} else if(i < 100) {
j <- c("0", as.character(i))
k <- paste(j, collapse = "")
} else {
k <- as.character(i)
}
file_path_components <- c(directory, k, ".csv")
this_file_path <- paste(file_path_components, collapse = "")
this_data_set <- read.csv(this_file_path, header=TRUE)
clean_data_set <- this_data_set[complete.cases(this_data_set),]
interim_data <- rbind(interim_data, clean_data_set)
}
subtotaled_data <- table(interim_data[, "ID"])
}
complete(this_directory, id=1)
complete <- function(directory, id = 1:332) {
interim_data <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
ID=integer())
for(i in id) {
if(i < 10) {
j <- c("00", as.character(i))
k <- paste(j, collapse = "")
} else if(i < 100) {
j <- c("0", as.character(i))
k <- paste(j, collapse = "")
} else {
k <- as.character(i)
}
file_path_components <- c(directory, k, ".csv")
this_file_path <- paste(file_path_components, collapse = "")
this_data_set <- read.csv(this_file_path, header=TRUE)
clean_data_set <- this_data_set[complete.cases(this_data_set),]
interim_data <- rbind(interim_data, clean_data_set)
}
subtotaled_data <- table(interim_data[, "ID"])
subtotaled_data
}
complete(this_directory, id=1)
complete(this_directory, id=1:5
)
data_set <- complete(this_directory, id=1:5)
complete <- function(directory, id = 1:332) {
interim_data <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
ID=integer())
for(i in id) {
if(i < 10) {
j <- c("00", as.character(i))
k <- paste(j, collapse = "")
} else if(i < 100) {
j <- c("0", as.character(i))
k <- paste(j, collapse = "")
} else {
k <- as.character(i)
}
file_path_components <- c(directory, k, ".csv")
this_file_path <- paste(file_path_components, collapse = "")
this_data_set <- read.csv(this_file_path, header=TRUE)
clean_data_set <- this_data_set[complete.cases(this_data_set),]
interim_data <- rbind(interim_data, clean_data_set)
}
subtotaled_data <- table(interim_data[, "ID"])
table_data <- t(subtotaled_data)
names(table_data) <- c("id", "nobs")
table_data
}
complete(this_directory, id=1:5)
complete <- function(directory, id = 1:332) {
interim_data <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
ID=integer())
for(i in id) {
if(i < 10) {
j <- c("00", as.character(i))
k <- paste(j, collapse = "")
} else if(i < 100) {
j <- c("0", as.character(i))
k <- paste(j, collapse = "")
} else {
k <- as.character(i)
}
file_path_components <- c(directory, k, ".csv")
this_file_path <- paste(file_path_components, collapse = "")
this_data_set <- read.csv(this_file_path, header=TRUE)
clean_data_set <- this_data_set[complete.cases(this_data_set),]
interim_data <- rbind(interim_data, clean_data_set)
}
subtotaled_data <- table(interim_data[, "ID"])
}
data_set <- complete(this_directory, id=1:5)
t(data_set)
data_set
data_set <- complete(this_directory, id=c(2,4,6,8,10))
data_set
t(data_set)
as.data.frame(data_set)
complete <- function(directory, id = 1:332) {
interim_data <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
ID=integer())
for(i in id) {
if(i < 10) {
j <- c("00", as.character(i))
k <- paste(j, collapse = "")
} else if(i < 100) {
j <- c("0", as.character(i))
k <- paste(j, collapse = "")
} else {
k <- as.character(i)
}
file_path_components <- c(directory, k, ".csv")
this_file_path <- paste(file_path_components, collapse = "")
this_data_set <- read.csv(this_file_path, header=TRUE)
clean_data_set <- this_data_set[complete.cases(this_data_set),]
interim_data <- rbind(interim_data, clean_data_set)
}
subtotaled_data <- table(interim_data[, "ID"])
table_data <- as.data.frame(subtotaled_data)
names(table_data) <- c("id", "nobs")
table_data
}
data_set <- complete(this_directory, id=1:5)
data_set
complete(this_directory, 1)
complete(this_directory, c(2,4,8,10,12))
complete(this_directory, 30:25)
complete(this_directory, 3)
complete <- function(directory, id = 1:332) {
interim_data <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
ID=integer())
for(i in id) {
if(i < 10) {
j <- c("00", as.character(i))
k <- paste(j, collapse = "")
} else if(i < 100) {
j <- c("0", as.character(i))
k <- paste(j, collapse = "")
} else {
k <- as.character(i)
}
file_path_components <- c(directory, k, ".csv")
this_file_path <- paste(file_path_components, collapse = "")
this_data_set <- read.csv(this_file_path, header=TRUE)
clean_data_set <- this_data_set[complete.cases(this_data_set),]
interim_data <- rbind(interim_data, clean_data_set)
}
subtotaled_data <- table(interim_data[, "ID"])
subtotaled_data
#     table_data <- as.data.frame(subtotaled_data)
#     names(table_data) <- c("id", "nobs")
#     table_data
}
complete(this_directory, 30:25)
complete(this_directory, c(30, 29. 28. 27, 26, 25))
complete(this_directory, c(30, 29, 28, 27, 26, 25))
complete <- function(directory, id = 1:332) {
interim_data <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
ID=integer())
table_data <- data.frame(id=integer(),
nobs=integer())
for(i in id) {
if(i < 10) {
j <- c("00", as.character(i))
k <- paste(j, collapse = "")
} else if(i < 100) {
j <- c("0", as.character(i))
k <- paste(j, collapse = "")
} else {
k <- as.character(i)
}
file_path_components <- c(directory, k, ".csv")
this_file_path <- paste(file_path_components, collapse = "")
this_data_set <- read.csv(this_file_path, header=TRUE)
clean_data_set <- this_data_set[complete.cases(this_data_set),]
# interim_data <- rbind(interim_data, clean_data_set)
subtotaled_data <- table(clean_data_set[, "ID"])
# subtotaled_data
interim_data_frame <- as.data.frame(subtotaled_data)
# names(table_data) <- c("id", "nobs")
table_data <- rbind(table_data, interim_data_frame)
}
table_data
#     subtotaled_data <- table(interim_data[, "ID"])
#     subtotaled_data
#     table_data <- as.data.frame(subtotaled_data)
#     names(table_data) <- c("id", "nobs")
#     table_data
}
complete(this_directory, c(30, 29, 28, 27, 26, 25))
complete(this_directory, 1)
complete(this_directory, c(2, 4, 8, 10, 12))
complete(this_directory, 30:25)
complete(this_directory, 3)
complete <- function(directory, id = 1:332) {
interim_data <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
ID=integer())
table_data <- data.frame(id=integer(),
nobs=integer())
for(i in id) {
if(i < 10) {
j <- c("00", as.character(i))
k <- paste(j, collapse = "")
} else if(i < 100) {
j <- c("0", as.character(i))
k <- paste(j, collapse = "")
} else {
k <- as.character(i)
}
file_path_components <- c(directory, k, ".csv")
this_file_path <- paste(file_path_components, collapse = "")
this_data_set <- read.csv(this_file_path, header=TRUE)
clean_data_set <- this_data_set[complete.cases(this_data_set),]
subtotaled_data <- table(clean_data_set[, "ID"])
interim_data_frame <- as.data.frame(subtotaled_data)
table_data <- rbind(table_data, interim_data_frame)
}
table_data
}
complete(this_directory, 30:25)
complete <- function(directory, id = 1:332) {
interim_data <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
ID=integer())
table_data <- data.frame(id=integer(),
nobs=integer())
for(i in id) {
if(i < 10) {
j <- c("00", as.character(i))
k <- paste(j, collapse = "")
} else if(i < 100) {
j <- c("0", as.character(i))
k <- paste(j, collapse = "")
} else {
k <- as.character(i)
}
file_path_components <- c(directory, k, ".csv")
this_file_path <- paste(file_path_components, collapse = "")
this_data_set <- read.csv(this_file_path, header=TRUE)
clean_data_set <- this_data_set[complete.cases(this_data_set),]
subtotaled_data <- table(clean_data_set[, "ID"])
interim_data_frame <- as.data.frame(subtotaled_data)
table_data <- rbind(table_data, interim_data_frame)
}
names(table_data) <- c("id", "nobs")
table_data
}
complete(this_directory, 30:25)
?cor
complete_counts <- complete(this_directory)
complete_counts
complete_counts[1, "nobs"]
complete_counts[,1:323]
complete_counts[, "id"]
install.packages("RMySQL")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(datasets)
data(iris)
iris
is.data.frame(iris)
apply(iris, 2, mean)
iris$Sepal.Length
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris[,1:4], 1, mean)
apply(iris[,1:4], 2, mean)
data(mtcars)
rm(iris)
?mtcars
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
cylhptable <- tapply(mtcars$hp, mtcars$cyl, mean)
cylhptable
cylhptable[1,3]-cylhptable[1,1]
debug(ls)
ls
set.seed(1)
rpois(5, 2)
?rnorm
?qnorm
?dpois
this_function <- function() {}
this_function <- function() {
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
}
this_output <- summaryRprof(this_function)
this_output <- summaryRprof(this_function())
y <- 6
x1 <- 50
x2 <- 3
this_output <- summaryRprof(this_function())
this_output <- summaryRprof(this_function())
qnorm(0.95, mean = 1100, sd = 75)
?pnorm
qnorm(0.95, mean = 1100, sd = 75/sqrt(100))
pnorm(16, mean = 15, sd = 10/sqrt(100))
qnorm(0.5, mean = 0.5, sd = sqrt(1/12/1000))
ppois(10, lambda = 5*3)
?pbinom
pbinom(4, size = 6, lower.tail = FALSE, prob = 0.5)
pbinom(3, size = 5, lower.tail = FALSE, prob = 0.5)
baseline = c(140, 138, 150, 148, 135)
week2 = c(132, 135, 151, 146, 130)
t.test(week2, baseline, paired = TRUE)
round(1100 + (c(-1,1) * qt(.975,9-1) * 30/sqrt(9)),0)
pbinom(2, size = 4, prob = 0.5, lower.tail = FALSE)
round(-4 + (c(-1,1) * qt(.95,9-1) * 1.65/sqrt(9)),0)
round(-4 + (c(-1,1) * qt(.975,9-1) * 1.65/sqrt(9)),0)
-4 + (c(-1,1) * qt(.95,9-1) * 1.65/sqrt(9))
-4 + (c(-1,1) * qt(.975,9-1) * 1.65/sqrt(9))
?t.test
?p.test
?pbinom
?pnorm
?pt
mean(c(0.18, -1.54, 0.42, 0.95))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
?lm
lm(y ~ x - 1)
mean(c(0.18, 0.18, -1.54, 0.42, 0.42, 0.42, 0.95))
cars_dataframe <- data("mtcars")
cars_dataframe <- data(mtcars)
mtcars
lm(mtcars$mpg ~ mtcars$wt)
1.5*0.4
rm(list = ls())
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- (x - mean(x))/sd(x)
sn
xn
rm(list = ls())
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
mean(c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42))
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
n <- length(y)
beta1 <- corr(y,x) * sd(y)/sd(x)
beta1 <- cor(y,x) * sd(y)/sd(x)
beta0 <- mean(y) - beta1 * mean(x)
e <- y - beta0 - beta1 * x
sigma <- sqrt(sum(e^2)/(n-2))
ssx <- sum((x - mean(x))^2)
seBeta0 <- sqrt(1/n + mean(x)^2 / ssx) * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0 <- beta0 / seBeta0
tBeta1 <- beta1 / seBeta1
pBeta1 <- 2 * pt(abs(tBeta1), df = n-2, lower.tail = FALSE)
fit <- lm(y~x)
summary(fit)$coefficients
pBeta1
summary(fit)
library(datasets)
data(mtcars)
fit <- lm(mtcars$mpg ~ mtcars$wt)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1,1) * qt(0.975, df = fit$df) * sumCoef[1,2]
sumCoef[2,1] + c(-1,1) * qt(0.975, df = fit$df) * sumCoef[2,2]
mean(mtcars$wt)
intercept_range <- sumCoef[1,1] + c(-1,1) * qt(0.975, df = fit$df) * sumCoef[1,2]
slope_range <- sumCoef[2,1] + c(-1,1) * qt(0.975, df = fit$df) * sumCoef[2,2]
intercept_range[1]-slope_range[1]*mean(mtcars$wt)
intercept_range[1]+slope_range[1]*mean(mtcars$wt)
?predict
p_conf <- predict(fit, newdata = mean(mtcars$wt), interval = ("confidence"))
p_conf
p_conf <- predict(fit, newdata = mtcars$wt, interval = ("confidence"))
p_conf <- predict(fit, newdata = data.frame(mtcars$wt), interval = ("confidence"))
p_conf
mean(mtcars$mpg)
mean(mtcars$wt)
fit$coefficients[1,1] + fit$coefficients[2,1]*mean(mtcars$wt)
sumCoef[1,1] + sumCoef[2,1]*mean(mtcars$wt)
sumCoef[1,1] + sumCoef[2,1]*3
mean(mtcars$wt)
p_pred <- predict(fit, interval = ("prediction"))
p_pred
sumCoef
sum((mtcars$wt-mean(mtcars$wt))^2)
?lm
fit <- lm(mtcars$mpg ~ mtcars$wt)
fit2 <- lm(mtcars$mpg ~ mtcars$wt - 1)
fit
fit2
summary(fit)
summary(fit2)
fit_err <- sum((mtcars$mpg - (summary(fit)$coefficients[1,1] + summary(fit)$coefficients[2,1] * mtcars$wt))^2)
fit2_err <- sum((mtcars$mpg - summary(fit2)$coefficients[1,1] * mtcars$wt)^2)
setwd("~/R/reproducible_research/peer_assessment_1")
raw_dataset <- read.csv("activity.csv")
head(raw_dataset)
summary(raw_dataset)
rm(list = ls())
setwd("~/R/reproducible_research/RepData_PeerAssessment1")
this_dataset <- read.csv("~/activity/activity.csv")
this_dataset <- read.csv("./activity/activity.csv")
head(this_dataset)
summary(this_dataset)
summary(this_dataset$steps)
library(reshape2)
recast_dataset <- dcast(this_dataset, date ~ steps, sum)
slim_dataset <- this_dataset
slim_dataset$interval <- NULL
recast_dataset <- dcast(slim_dataset, date ~ variable, sum)
recast_dataset <- dcast(slim_dataset, date ~ steps, sum)
?summarize
summarize(slim_dataset)
library(plyr)
summarize(slim_dataset)
?dplyr
?ddply
ddply(slim_dataset, c("steps", "date"), sum(na.rm = TRUE))
ddply(slim_dataset, .(date), summarize, mean_steps = mean(step, na.rm = TRUE))
ddply(slim_dataset, .(date), summarize, sum_steps = sum(steps, na.rm = TRUE))
library(ggplot2)
sum_dataset <- ddply(slim_dataset, .(date), summarize,
sum_steps = sum(steps, na.rm = TRUE))
sum_dataset
g <- ggplot(data = sum_dataset)
g <- geom_histogram()
g
rm(g)
g <- ggplot(data = sum_dataset)
rm(g)
g <- ggplot(data = sum_dataset, aes(x = date))
g <- g + geom_histogram()
g
qplot(sum_steps, data = sum_dataset, geom = "histogram")
qplot(date, data = sum_dataset, geom = "histogram")
qplot(sum_steps, data = sum_dataset, geom = "histogram")
qplot(sum_steps, data = sum_dataset, geom = "histogram", xlab = "Daily Number of Steps", ylab = "Instances", main = "Histogram of Daily Steps Taken")
qplot(sum_steps, data = sum_dataset, geom = "histogram", xlab = "Daily Number of Steps", ylab = "Instances", main = "Histogram of Daily Steps Taken", binwidth = 1000)
mean(sum_dataset$sum_steps)
median(sum_dataset$sum_steps)
slim_dataset_2 <- this_dataset; slim_dataset_2$date <- NULL
interval_dataset <- ddply(slim_dataset_2, .(interval), summarize,
avg_steps = mean(steps, na.rm = TRUE))
qplot(avg_steps, data = sum_dataset_2, geom = "l",
xlab = "Time of Day", ylab = "Average Steps Taken",
main = "Average Steps Taken During the Day")
qplot(avg_steps, data = interval_dataset, geom = "l",
xlab = "Time of Day", ylab = "Average Steps Taken",
main = "Average Steps Taken During the Day")
qplot(avg_steps, data = interval_dataset, geom = "line",
xlab = "Time of Day", ylab = "Average Steps Taken",
main = "Average Steps Taken During the Day")
